version: '3.8'

services:

  redis:
    image: redis:buster
    container_name: redis
    ports:
      - "6379:6379"

  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db

  web:
    restart: always
    build: .
    volumes:
      - .:/code
    ports:
      - 8000:8000
    image: app:django
    container_name: django_container
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    depends_on:
      - db

  celery_worker:
    restart: always
    build:
      context: .
    command: celery -A minierp worker -l INFO
    volumes:
      - .:/code
    container_name: celery_worker
    depends_on:
      - db
      - redis
      - web

  celery_beat:
    restart: always
    build:
      context: .
    command: celery -A minierp beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    container_name: celery_beat
    depends_on:
      - db
      - redis
      - web

#   celery_beat:
#     build: 
#       context: .
#       dockerfile: ./Dockerfile
#     image: minierp_docker_celery_beat
#     command: celery -A minierp beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
#     volumes:
#       - .:/code
#     env_file:
#       - ./.env
#     depends_on:
#       - redis
#       - db

# volumes:
#   postgres_data: